syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "rpc_update_user.proto";
import "rpc_create_recipe.proto";
import "rpc_get_recipe.proto";
import "rpc_delete_recipe.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";



option go_package = "github.com/PlatosCodes/momsrecipes/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Moms Recipes API";
    version: "1.0";
    contact: {
      name: "Alex Merola";
      url: "https://github.com/PlatosCodes";
      email: "codingplato@gmail.com";
    };
  };
};

service MomsRecipes {
      // Creates a new user
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {    
            post: "/v1/create_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to create a new user";
          summary: "Create new user";
        };
    }
    // Logs in a user
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {    
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to login a user";
          summary: "Login a user";
        };
    }
    // Updates a user's password
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
      option (google.api.http) = {    
          patch: "/v1/update_user"
          body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Use this API to update a user";
        summary: "Update a user";
      };
    }
    // Creates a new recipe
    rpc CreateRecipe(CreateRecipeRequest) returns (CreateRecipeResponse) {
      option (google.api.http) = {    
        post: "/v1/create_recipe"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Use this API to create a recipe";
        summary: "Create a recipe";
      };
    };
    // Retrieves a recipe by ID
    rpc GetRecipeByID(GetRecipeByIDRequest) returns (GetRecipeByIDResponse) {
      option (google.api.http) = {    
        get: "/v1/get_recipe/{id}";
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Use this API to get a recipe by its id";
        summary: "Get a recipe by id";
      };
    };
    // Deletes a recipe by ID
    rpc DeleteRecipeByID(DeleteRecipeByIDRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {    
        delete: "/v1/delete_recipe/{id}";
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Use this API to delete a recipe by its id";
        summary: "Delete a recipe by id";
      };
    };
}